/// <reference types="node" />
import { ChildProcess } from "child_process";
export declare type Waifu2xFormats = "bmp" | "dib" | "exr" | "hdr" | "jpe" | "jpeg" | "jpg" | "pbm" | "pgm" | "pic" | "png" | "pnm" | "ppm" | "pxm" | "ras" | "sr" | "tif" | "tiff" | "webp";
export declare type Waifu2xUpscalers = "waifu2x" | "real-esrgan";
export interface Waifu2xOptions {
    noise?: 0 | 1 | 2 | 3;
    scale?: number;
    mode?: "noise" | "scale" | "noise-scale";
    blockSize?: number;
    pngCompression?: number;
    jpgWebpQuality?: number;
    disableGPU?: boolean;
    forceOpenCL?: boolean;
    processor?: number;
    threads?: number;
    recursive?: boolean;
    modelDir?: string;
    rename?: string;
    waifu2xPath?: string;
    webpPath?: string;
    limit?: number;
    parallelFrames?: number;
    upscaler?: Waifu2xUpscalers;
    esrganPath?: string;
}
export interface Waifu2xGIFOptions extends Waifu2xOptions {
    quality?: number;
    speed?: number;
    reverse?: boolean;
    transparentColor?: string;
    noResume?: boolean;
}
export interface Waifu2xAnimatedWebpOptions extends Waifu2xOptions {
    quality?: number;
    speed?: number;
    reverse?: boolean;
    webpPath?: string;
    noResume?: boolean;
}
export interface Waifu2xVideoOptions extends Waifu2xOptions {
    framerate?: number;
    quality?: number;
    speed?: number;
    reverse?: boolean;
    pitch?: boolean;
    ffmpegPath?: string;
    sdColorSpace?: boolean;
    noResume?: boolean;
}
export default class Waifu2x {
    static processes: ChildProcess[];
    static chmod777: (waifu2xPath?: string, webpPath?: string, esrganPath?: string) => void;
    private static parseFilename;
    private static recursiveRename;
    static parseDest: (source: string, dest?: string, options?: {
        rename?: string;
    }) => string;
    private static timeout;
    static convertToWebp: (source: string, dest: string, webpPath?: string, quality?: number) => Promise<string>;
    private static addProcess;
    private static removeProcess;
    static convertFromWebp: (source: string, dest: string, webpPath?: string) => Promise<string>;
    static upscaleImage: (source: string, dest?: string, options?: Waifu2xOptions, progress?: (percent?: number) => void | boolean) => Promise<string>;
    private static searchFiles;
    static upscaleImages: (sourceFolder: string, destFolder?: string, options?: Waifu2xOptions, progress?: (current: number, total: number) => void | boolean) => Promise<string[]>;
    private static parseTransparentColor;
    private static encodeGIF;
    private static awaitStream;
    private static newDest;
    private static findMatchingSettings;
    static upscaleGIF: (source: string, dest?: string, options?: Waifu2xGIFOptions, progress?: (current: number, total: number) => void | boolean) => Promise<string>;
    static upscaleGIFs: (sourceFolder: string, destFolder?: string, options?: Waifu2xGIFOptions, totalProgress?: (current: number, total: number) => void | boolean, progress?: (current: number, total: number) => void | boolean) => Promise<string[]>;
    private static dumpWebpFrames;
    private static parseWebpDelays;
    private static encodeAnimatedWebp;
    static upscaleAnimatedWebp: (source: string, dest?: string, options?: Waifu2xGIFOptions, progress?: (current: number, total: number) => void | boolean) => Promise<string>;
    static upscaleAnimatedWebps: (sourceFolder: string, destFolder?: string, options?: Waifu2xAnimatedWebpOptions, totalProgress?: (current: number, total: number) => void | boolean, progress?: (current: number, total: number) => void | boolean) => Promise<string[]>;
    static parseFramerate: (file: string, ffmpegPath?: string) => Promise<number>;
    static parseDuration: (file: string, ffmpegPath?: string) => Promise<any>;
    static parseResolution: (file: string, ffmpegPath?: string) => Promise<{
        width: number;
        height: number;
    }>;
    static upscaleVideo: (source: string, dest?: string, options?: Waifu2xVideoOptions, progress?: (current: number, total: number) => void | boolean) => Promise<string>;
    static upscaleVideos: (sourceFolder: string, destFolder?: string, options?: Waifu2xVideoOptions, totalProgress?: (current: number, total: number) => void | boolean, progress?: (current: number, total: number) => void | boolean) => Promise<string[]>;
    private static removeDirectory;
}
